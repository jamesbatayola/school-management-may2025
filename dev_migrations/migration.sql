BEGIN;
CREATE TABLE IF NOT EXISTS guardians (
    id SERIAL PRIMARY KEY NOT NULL,
    name VARCHAR(64) NOT NULL,
    phone_number TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE TYPE gender_enum AS ENUM ('MALE', 'FEMALE');
CREATE TABLE IF NOT EXISTS students (
    id SERIAL PRIMARY KEY NOT NULL,
    student_id UUID DEFAULT uuid_generate_v4() UNIQUE,
    first_name VARCHAR(64) NOT NULL,
    last_name VARCHAR(64) NOT NULL,
    gender gender_enum NOT NULL,
    email VARCHAR(124) UNIQUE NOT NULL,
    guardian_id INTEGER NOT NULL,
    FOREIGN KEY (guardian_id) REFERENCES guardians (id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS levels (
    id SERIAL PRIMARY KEY NOT NULL,
    grade INTEGER NOT NULL,
    name VARCHAR(64) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS student_levels (
    id SERIAL PRIMARY KEY NOT NULL,
    level_id INTEGER NOT NULL,
    student_id UUID UNIQUE NOT NULL,
    FOREIGN KEY (level_id) REFERENCES levels (id) ON DELETE CASCADE,
    FOREIGN KEY (student_id) REFERENCES students (student_id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS teachers (
    id SERIAL PRIMARY KEY NOT NULL,
    name VARCHAR(124) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS school_years (
    id SERIAL PRIMARY KEY NOT NULL,
    year_name VARCHAR (64) NOT NULL,
    year_start TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    year_end TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS terms (
    id SERIAL PRIMARY KEY NOT NULL,
    year_id INTEGER NOT NULL,
    term_name VARCHAR (32) NOT NULL,
    term_start TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    term_end TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (year_id) REFERENCES school_years (id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS subjects (
    id SERIAL PRIMARY KEY NOT NULL,
    name VARCHAR(32) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS courses (
    id SERIAL PRIMARY KEY NOT NULL,
    course_code VARCHAR(12) NOT NULL,
    subject_id INTEGER NOT NULL,
    FOREIGN KEY (subject_id) REFERENCES subjects (id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS classes (
    id SERIAL PRIMARY KEY NOT NULL,
    teacher_id INTEGER NOT NULL,
    course_id INTEGER NOT NULL,
    year_id INTEGER NOT NULL,
    term_id INTEGER NOT NULL,
    class_start TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    class_end TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP + INTERVAL '90 minutes',
    FOREIGN KEY (teacher_id) REFERENCES teachers (id) ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES courses (id) ON DELETE CASCADE,
    FOREIGN KEY (year_id) REFERENCES school_years (id) ON DELETE CASCADE,
    FOREIGN KEY (term_id) REFERENCES terms (id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS student_classes (
    id SERIAL PRIMARY KEY NOT NULL,
    student_id UUID UNIQUE NOT NULL,
    class_id INTEGER NOT NULL,
    FOREIGN KEY (student_id) REFERENCES students (student_id) ON DELETE CASCADE,
    FOREIGN KEY (class_id) REFERENCES classes (id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS enrollments (
    id SERIAL PRIMARY KEY NOT NULL,
    student_id UUID UNIQUE NOT NULL,
    course_id INTEGER NOT NULL,
    enrolled_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES students (student_id) ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES courses (id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TYPE bill_status_enum as ENUM (
    'PAID',
    'UNPAID',
    'PENDING',
    'CANCELLED',
    'OVERDUE'
);
CREATE TABLE IF NOT EXISTS enrollment_bills (
    id SERIAL PRIMARY KEY NOT NULL,
    enrollment_id INTEGER NOT NULL,
    bill_status bill_status_enum DEFAULT 'UNPAID' NOT NULL,
    due_date TIMESTAMPTZ DEFAULT (CURRENT_TIMESTAMP + INTERVAL '15 days'),
    FOREIGN KEY (enrollment_id) REFERENCES enrollments (id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS score_ranges (
    id SERIAL PRIMARY KEY NOT NULL,
    min_score INTEGER NOT NULL,
    max_score INTEGER NOT NULL,
    grade VARCHAR(2) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);
COMMIT;